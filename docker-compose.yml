version: "3.5"

services:
  backend_redis:
    image: redis:7-alpine
    container_name: backend_redis
    restart: always
    volumes:
      - ./redis-data:/data
    ports:
      - "6379:6379"

  backend_postgres:
    image: postgres:13
    container_name: backend_postgres
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
    volumes:
      - /data/postgres/data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"

  backend:
    container_name: backend
    restart: always
    build:
      context: ./backend/
      dockerfile: Dockerfile
    command: bash -c "
      python manage.py migrate &
      python manage.py runserver 0.0.0.0:8000"
    environment:
      REDIS_HOST: "backend_redis"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "backend_postgres"
      POSTGRES_NAME: "postgres"
      POSTGRES_HOST: "backend_postgres"
      POSTGRES_PORT: "5432"
    ports:
        - "8000:8000"
    volumes:
      - ./backend/:/app
    depends_on:
      - backend_redis
      - backend_postgres

  backend_celery:
    container_name: backend_celery
    restart: always
    build:
      context: ./backend/
      dockerfile: Dockerfile
    command: bash -c "
      celery -A backend worker -l info &
      celery -A backend worker -l info -Q withdraw &
      celery -A backend.celery beat"
    environment:
      REDIS_HOST: "backend_redis"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "backend_postgres"
      POSTGRES_NAME: "postgres"
      POSTGRES_HOST: "backend_postgres"
      POSTGRES_PORT: "5432"
    volumes:
      - ./backend/:/app
    depends_on:
      - backend_redis
      - backend_postgres

networks:
  default:
    external: true
    name: main

volumes:
  pgdata: {}
